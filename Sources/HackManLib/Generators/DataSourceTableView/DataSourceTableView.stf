import UIKit

class {{ resource.pluralizedName }}DataSource: NSObject, UITableViewDataSource {
    {% if coordinator %}
    weak var coordinator: {{ resource.pluralizedName }}Coordinator?
    {% endif %}
    
    var {{ resource.pluralizedNameForFunction }}: [{{ resource.name }}] {
        return {{ resource.name }}.sampleData()
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // Asks your data source object for the number of items in the specified section.
        return {{ resource.pluralizedNameForFunction }}.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(forIndexPath: indexPath) as {{ resource.name }}TableViewCell
        let {{ resource.nameForFunction }} = {{ resource.pluralizedNameForFunction }}[indexPath.item]
        {% for property in resource.properties %}
            cell.{{ property.name }}Label.text = String(describing: {{ resource.nameForFunction }}.{{ property.name }})
        {% endfor %}
        return cell
    }
}

extension {{ resource.pluralizedName }}DataSource: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        // Tells the delegate that the item at the specified index path was selected.
        print("Selected item \(indexPath.item) in section \(indexPath.section)")
        {% if coordinator %}
        coordinator?.detail({{ resource.nameForFunction }}: {{ resource.pluralizedNameForFunction }}[indexPath.row])
        {% endif %}
    }
}
